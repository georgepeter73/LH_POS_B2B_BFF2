//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DesktopUnderwriterRecommendationBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DesktopUnderwriterRecommendationBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="ApproveEligible"/>
 *     &lt;enumeration value="ApproveIneligible"/>
 *     &lt;enumeration value="Error"/>
 *     &lt;enumeration value="ExpandedApproval1Eligible"/>
 *     &lt;enumeration value="ExpandedApproval1Ineligible"/>
 *     &lt;enumeration value="ExpandedApproval2Eligible"/>
 *     &lt;enumeration value="ExpandedApproval2Ineligible"/>
 *     &lt;enumeration value="ExpandedApproval3Eligible"/>
 *     &lt;enumeration value="ExpandedApproval3Ineligible"/>
 *     &lt;enumeration value="OutOfScope"/>
 *     &lt;enumeration value="ReferEligible"/>
 *     &lt;enumeration value="ReferIneligible"/>
 *     &lt;enumeration value="ReferWithCaution4"/>
 *     &lt;enumeration value="Unknown"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "DesktopUnderwriterRecommendationBase")
@XmlEnum
public enum DesktopUnderwriterRecommendationBase {

    @XmlEnumValue("ApproveEligible")
    APPROVE_ELIGIBLE("ApproveEligible"),
    @XmlEnumValue("ApproveIneligible")
    APPROVE_INELIGIBLE("ApproveIneligible"),
    @XmlEnumValue("Error")
    ERROR("Error"),
    @XmlEnumValue("ExpandedApproval1Eligible")
    EXPANDED_APPROVAL_1_ELIGIBLE("ExpandedApproval1Eligible"),
    @XmlEnumValue("ExpandedApproval1Ineligible")
    EXPANDED_APPROVAL_1_INELIGIBLE("ExpandedApproval1Ineligible"),
    @XmlEnumValue("ExpandedApproval2Eligible")
    EXPANDED_APPROVAL_2_ELIGIBLE("ExpandedApproval2Eligible"),
    @XmlEnumValue("ExpandedApproval2Ineligible")
    EXPANDED_APPROVAL_2_INELIGIBLE("ExpandedApproval2Ineligible"),
    @XmlEnumValue("ExpandedApproval3Eligible")
    EXPANDED_APPROVAL_3_ELIGIBLE("ExpandedApproval3Eligible"),
    @XmlEnumValue("ExpandedApproval3Ineligible")
    EXPANDED_APPROVAL_3_INELIGIBLE("ExpandedApproval3Ineligible"),
    @XmlEnumValue("OutOfScope")
    OUT_OF_SCOPE("OutOfScope"),
    @XmlEnumValue("ReferEligible")
    REFER_ELIGIBLE("ReferEligible"),
    @XmlEnumValue("ReferIneligible")
    REFER_INELIGIBLE("ReferIneligible"),
    @XmlEnumValue("ReferWithCaution4")
    REFER_WITH_CAUTION_4("ReferWithCaution4"),
    @XmlEnumValue("Unknown")
    UNKNOWN("Unknown");
    private final String value;

    DesktopUnderwriterRecommendationBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DesktopUnderwriterRecommendationBase fromValue(String v) {
        for (DesktopUnderwriterRecommendationBase c: DesktopUnderwriterRecommendationBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
