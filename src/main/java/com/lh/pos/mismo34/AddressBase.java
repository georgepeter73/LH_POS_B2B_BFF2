//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AddressBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AddressBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="CorporateHeadquarters"/>
 *     &lt;enumeration value="Current"/>
 *     &lt;enumeration value="LegalEntityFormation"/>
 *     &lt;enumeration value="Mailing"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="Primary"/>
 *     &lt;enumeration value="Prior"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "AddressBase")
@XmlEnum
public enum AddressBase {


    /**
     * The address of legal formation for the legal entity, as specified in ISO standard 17442:2012 (E).*
     *
     */
    @XmlEnumValue("CorporateHeadquarters")
    CORPORATE_HEADQUARTERS("CorporateHeadquarters"),
    @XmlEnumValue("Current")
    CURRENT("Current"),

    /**
     * The address of legal entity headquarters, as specified in ISO standard 17442:2012 (E).*
     *
     */
    @XmlEnumValue("LegalEntityFormation")
    LEGAL_ENTITY_FORMATION("LegalEntityFormation"),

    /**
     * The address where an individual or legal entity receives letters or packages.
     *
     */
    @XmlEnumValue("Mailing")
    MAILING("Mailing"),
    @XmlEnumValue("Other")
    OTHER("Other"),
    @XmlEnumValue("Primary")
    PRIMARY("Primary"),

    /**
     * Indicates that this address applies to a previous point in time.*
     *
     */
    @XmlEnumValue("Prior")
    PRIOR("Prior");
    private final String value;

    AddressBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AddressBase fromValue(String v) {
        for (AddressBase c: AddressBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
