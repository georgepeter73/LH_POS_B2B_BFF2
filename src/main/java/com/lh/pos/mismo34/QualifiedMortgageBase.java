//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for QualifiedMortgageBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="QualifiedMortgageBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="BalloonPayment"/>
 *     &lt;enumeration value="NotApplicable"/>
 *     &lt;enumeration value="NotAQualifiedMortgage"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="SmallCreditor"/>
 *     &lt;enumeration value="SmallCreditorRural"/>
 *     &lt;enumeration value="Standard"/>
 *     &lt;enumeration value="Temporary"/>
 *     &lt;enumeration value="TemporaryAgencyGSE"/>
 *     &lt;enumeration value="TemporarySmallCreditorBalloon"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "QualifiedMortgageBase")
@XmlEnum
public enum QualifiedMortgageBase {


    /**
     * The covered loan is a balloon-payment qualified mortgage pursuant to Regulation Z Section 1026.43(f).
     *
     */
    @XmlEnumValue("BalloonPayment")
    BALLOON_PAYMENT("BalloonPayment"),

    /**
     * Loan not subject to the ability-to-repay provisions of Regulation Z.
     *
     */
    @XmlEnumValue("NotApplicable")
    NOT_APPLICABLE("NotApplicable"),

    /**
     * The covered loan is not a qualified mortgage pursuant to Regulation Z Section 1026.43(e) or (f).
     *
     */
    @XmlEnumValue("NotAQualifiedMortgage")
    NOT_A_QUALIFIED_MORTGAGE("NotAQualifiedMortgage"),
    @XmlEnumValue("Other")
    OTHER("Other"),

    /**
     * A loan made subject to Regulation Z Small Creditor Qualified Mortgage standards.
     *
     */
    @XmlEnumValue("SmallCreditor")
    SMALL_CREDITOR("SmallCreditor"),

    /**
     * A loan made subject to Regulation Z Small Creditor Qualified Mortgage standards.
     *
     */
    @XmlEnumValue("SmallCreditorRural")
    SMALL_CREDITOR_RURAL("SmallCreditorRural"),

    /**
     * A loan made subject to Regulation Z standard Qualified Mortgage standards.
     *
     */
    @XmlEnumValue("Standard")
    STANDARD("Standard"),

    /**
     * The covered loan is a temporary qualified mortgage pursuant to Regulation Z Section 1026.43(e)(4).
     *
     */
    @XmlEnumValue("Temporary")
    TEMPORARY("Temporary"),

    /**
     * A loan made subject to Regulation Z temporary Qualified Mortgage standards under FHA, USDA, VA, or GSE guidelines.
     *
     */
    @XmlEnumValue("TemporaryAgencyGSE")
    TEMPORARY_AGENCY_GSE("TemporaryAgencyGSE"),

    /**
     * A loan made subject to Regulation Z temporary qualified mortgage standards for a balloon payment loan made by a small creditor on a subject property that is not rural or underserved.
     *
     */
    @XmlEnumValue("TemporarySmallCreditorBalloon")
    TEMPORARY_SMALL_CREDITOR_BALLOON("TemporarySmallCreditorBalloon");
    private final String value;

    QualifiedMortgageBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static QualifiedMortgageBase fromValue(String v) {
        for (QualifiedMortgageBase c: QualifiedMortgageBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
