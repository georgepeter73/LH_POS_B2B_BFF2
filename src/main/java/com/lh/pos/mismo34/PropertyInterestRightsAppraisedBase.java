//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PropertyInterestRightsAppraisedBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PropertyInterestRightsAppraisedBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="Easement"/>
 *     &lt;enumeration value="Encroachment"/>
 *     &lt;enumeration value="FeeSimpleEstate"/>
 *     &lt;enumeration value="LeaseFeeEstate"/>
 *     &lt;enumeration value="LeaseholdEstate"/>
 *     &lt;enumeration value="License"/>
 *     &lt;enumeration value="LifeEstate"/>
 *     &lt;enumeration value="Other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "PropertyInterestRightsAppraisedBase")
@XmlEnum
public enum PropertyInterestRightsAppraisedBase {

    @XmlEnumValue("Easement")
    EASEMENT("Easement"),
    @XmlEnumValue("Encroachment")
    ENCROACHMENT("Encroachment"),
    @XmlEnumValue("FeeSimpleEstate")
    FEE_SIMPLE_ESTATE("FeeSimpleEstate"),
    @XmlEnumValue("LeaseFeeEstate")
    LEASE_FEE_ESTATE("LeaseFeeEstate"),
    @XmlEnumValue("LeaseholdEstate")
    LEASEHOLD_ESTATE("LeaseholdEstate"),
    @XmlEnumValue("License")
    LICENSE("License"),
    @XmlEnumValue("LifeEstate")
    LIFE_ESTATE("LifeEstate"),
    @XmlEnumValue("Other")
    OTHER("Other");
    private final String value;

    PropertyInterestRightsAppraisedBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PropertyInterestRightsAppraisedBase fromValue(String v) {
        for (PropertyInterestRightsAppraisedBase c: PropertyInterestRightsAppraisedBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
