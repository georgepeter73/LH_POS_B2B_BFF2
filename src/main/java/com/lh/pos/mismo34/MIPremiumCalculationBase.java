//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for MIPremiumCalculationBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="MIPremiumCalculationBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="AverageAnnualScheduledUnpaidPrincipalBalance"/>
 *     &lt;enumeration value="BaseLoanAmount"/>
 *     &lt;enumeration value="Constant"/>
 *     &lt;enumeration value="Declining"/>
 *     &lt;enumeration value="NoRenewals"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="PercentOfCurrentBalance"/>
 *     &lt;enumeration value="PercentOfOriginalBalance"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "MIPremiumCalculationBase")
@XmlEnum
public enum MIPremiumCalculationBase {

    @XmlEnumValue("AverageAnnualScheduledUnpaidPrincipalBalance")
    AVERAGE_ANNUAL_SCHEDULED_UNPAID_PRINCIPAL_BALANCE("AverageAnnualScheduledUnpaidPrincipalBalance"),
    @XmlEnumValue("BaseLoanAmount")
    BASE_LOAN_AMOUNT("BaseLoanAmount"),
    @XmlEnumValue("Constant")
    CONSTANT("Constant"),
    @XmlEnumValue("Declining")
    DECLINING("Declining"),
    @XmlEnumValue("NoRenewals")
    NO_RENEWALS("NoRenewals"),
    @XmlEnumValue("Other")
    OTHER("Other"),
    @XmlEnumValue("PercentOfCurrentBalance")
    PERCENT_OF_CURRENT_BALANCE("PercentOfCurrentBalance"),
    @XmlEnumValue("PercentOfOriginalBalance")
    PERCENT_OF_ORIGINAL_BALANCE("PercentOfOriginalBalance");
    private final String value;

    MIPremiumCalculationBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static MIPremiumCalculationBase fromValue(String v) {
        for (MIPremiumCalculationBase c: MIPremiumCalculationBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
