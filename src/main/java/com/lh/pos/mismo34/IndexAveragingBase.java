//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for IndexAveragingBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="IndexAveragingBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="AverageConsecutiveIndexValues"/>
 *     &lt;enumeration value="AveragePeriodicIndexRates"/>
 *     &lt;enumeration value="AveragePreviousLoanIndexRates"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "IndexAveragingBase")
@XmlEnum
public enum IndexAveragingBase {


    /**
     * Average consecutive Index values from actual Index history.
     *
     */
    @XmlEnumValue("AverageConsecutiveIndexValues")
    AVERAGE_CONSECUTIVE_INDEX_VALUES("AverageConsecutiveIndexValues"),

    /**
     * Average periodic index rates from the Index History regardless of changes made to the loans interest rate.
     *
     */
    @XmlEnumValue("AveragePeriodicIndexRates")
    AVERAGE_PERIODIC_INDEX_RATES("AveragePeriodicIndexRates"),

    /**
     * Average consecutive index rates from the loans change file from previous scheduled IR change dates after getting the first value from Index History.
     *
     */
    @XmlEnumValue("AveragePreviousLoanIndexRates")
    AVERAGE_PREVIOUS_LOAN_INDEX_RATES("AveragePreviousLoanIndexRates");
    private final String value;

    IndexAveragingBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static IndexAveragingBase fromValue(String v) {
        for (IndexAveragingBase c: IndexAveragingBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
