//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ServicePaymentMethodBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ServicePaymentMethodBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="ACH"/>
 *     &lt;enumeration value="CreditCard"/>
 *     &lt;enumeration value="DebitCard"/>
 *     &lt;enumeration value="OnAccount"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="Voucher"/>
 *     &lt;enumeration value="Wire"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "ServicePaymentMethodBase")
@XmlEnum
public enum ServicePaymentMethodBase {


    /**
     * An Automated Clearing House transaction
     *
     */
    ACH("ACH"),

    /**
     * A credit card is to be charged for the transaction
     *
     */
    @XmlEnumValue("CreditCard")
    CREDIT_CARD("CreditCard"),

    /**
     * A debit card is to be debited for the transaction
     *
     */
    @XmlEnumValue("DebitCard")
    DEBIT_CARD("DebitCard"),

    /**
     * A prepaid account is to be charged for the transaction
     *
     */
    @XmlEnumValue("OnAccount")
    ON_ACCOUNT("OnAccount"),

    /**
     * A form of payment not included in the enumerated list is to be used for the transaction
     *
     */
    @XmlEnumValue("Other")
    OTHER("Other"),

    /**
     * A payment voucher is to be used for the transaction
     *
     */
    @XmlEnumValue("Voucher")
    VOUCHER("Voucher"),

    /**
     * A wire transfer transaction
     *
     */
    @XmlEnumValue("Wire")
    WIRE("Wire");
    private final String value;

    ServicePaymentMethodBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ServicePaymentMethodBase fromValue(String v) {
        for (ServicePaymentMethodBase c: ServicePaymentMethodBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
