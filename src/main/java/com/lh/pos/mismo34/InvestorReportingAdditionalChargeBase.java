//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for InvestorReportingAdditionalChargeBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="InvestorReportingAdditionalChargeBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="FeesCollected"/>
 *     &lt;enumeration value="LatePaymentCharge"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="PrepaymentPenalty"/>
 *     &lt;enumeration value="RealizedLossDueToForeclosedREOPropertyLiquidation"/>
 *     &lt;enumeration value="RealizedLossDueToLoanModification"/>
 *     &lt;enumeration value="SkipPaymentCharge"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "InvestorReportingAdditionalChargeBase")
@XmlEnum
public enum InvestorReportingAdditionalChargeBase {


    /**
     * Fees collected from a responsible party during the current period.
     *
     */
    @XmlEnumValue("FeesCollected")
    FEES_COLLECTED("FeesCollected"),

    /**
     * Assessed as a penalty for failure to pay a regular installment by the due date plus any allowed grace period.
     *
     */
    @XmlEnumValue("LatePaymentCharge")
    LATE_PAYMENT_CHARGE("LatePaymentCharge"),
    @XmlEnumValue("Other")
    OTHER("Other"),
    @XmlEnumValue("PrepaymentPenalty")
    PREPAYMENT_PENALTY("PrepaymentPenalty"),

    /**
     * Net economic loss on a foreclosure and/or REO liquidation as it pertains to the trust that backs a security.
     *
     */
    @XmlEnumValue("RealizedLossDueToForeclosedREOPropertyLiquidation")
    REALIZED_LOSS_DUE_TO_FORECLOSED_REO_PROPERTY_LIQUIDATION("RealizedLossDueToForeclosedREOPropertyLiquidation"),

    /**
     * Temporary or ongoing loss attributable to short-term modification of terms of a loan not being liquidated from the trust that backs a security.
     *
     */
    @XmlEnumValue("RealizedLossDueToLoanModification")
    REALIZED_LOSS_DUE_TO_LOAN_MODIFICATION("RealizedLossDueToLoanModification"),

    /**
     * Assessed at the time a borrower chooses to exercise the Skip Payment option.
     *
     */
    @XmlEnumValue("SkipPaymentCharge")
    SKIP_PAYMENT_CHARGE("SkipPaymentCharge");
    private final String value;

    InvestorReportingAdditionalChargeBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static InvestorReportingAdditionalChargeBase fromValue(String v) {
        for (InvestorReportingAdditionalChargeBase c: InvestorReportingAdditionalChargeBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
