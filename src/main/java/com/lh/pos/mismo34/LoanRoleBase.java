//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for LoanRoleBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="LoanRoleBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="HistoricalLoan"/>
 *     &lt;enumeration value="RelatedLoan"/>
 *     &lt;enumeration value="SubjectLoan"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "LoanRoleBase")
@XmlEnum
public enum LoanRoleBase {


    /**
     * A loan linked to this transaction via past relationship to the borrower and mortgage type. Does not have a direct bearing on the Related Loan or Subject Loan.
     *
     */
    @XmlEnumValue("HistoricalLoan")
    HISTORICAL_LOAN("HistoricalLoan"),

    /**
     * A loan linked to the subject loan by virtue of being collateralized by the same property. Examples include the loan being refinanced, or a HELOC or other subordinate lien collateralized by the same property as the subject loan.
     *
     */
    @XmlEnumValue("RelatedLoan")
    RELATED_LOAN("RelatedLoan"),

    /**
     * The loan that is the object of the transaction, upon which the receiving business partner will take some action.
     *
     */
    @XmlEnumValue("SubjectLoan")
    SUBJECT_LOAN("SubjectLoan");
    private final String value;

    LoanRoleBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LoanRoleBase fromValue(String v) {
        for (LoanRoleBase c: LoanRoleBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
