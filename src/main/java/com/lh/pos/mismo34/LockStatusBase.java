//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for LockStatusBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="LockStatusBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="CanceledOrWithdrawn"/>
 *     &lt;enumeration value="Expired"/>
 *     &lt;enumeration value="Locked"/>
 *     &lt;enumeration value="ModificationRequested"/>
 *     &lt;enumeration value="Modified"/>
 *     &lt;enumeration value="None"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="Pending"/>
 *     &lt;enumeration value="Rejected"/>
 *     &lt;enumeration value="Requested"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "LockStatusBase")
@XmlEnum
public enum LockStatusBase {

    @XmlEnumValue("CanceledOrWithdrawn")
    CANCELED_OR_WITHDRAWN("CanceledOrWithdrawn"),
    @XmlEnumValue("Expired")
    EXPIRED("Expired"),
    @XmlEnumValue("Locked")
    LOCKED("Locked"),
    @XmlEnumValue("ModificationRequested")
    MODIFICATION_REQUESTED("ModificationRequested"),
    @XmlEnumValue("Modified")
    MODIFIED("Modified"),
    @XmlEnumValue("None")
    NONE("None"),
    @XmlEnumValue("Other")
    OTHER("Other"),
    @XmlEnumValue("Pending")
    PENDING("Pending"),
    @XmlEnumValue("Rejected")
    REJECTED("Rejected"),
    @XmlEnumValue("Requested")
    REQUESTED("Requested");
    private final String value;

    LockStatusBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LockStatusBase fromValue(String v) {
        for (LockStatusBase c: LockStatusBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
