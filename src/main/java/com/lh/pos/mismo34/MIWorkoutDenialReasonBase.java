//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for MIWorkoutDenialReasonBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="MIWorkoutDenialReasonBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="BorrowerCannotAfford"/>
 *     &lt;enumeration value="BorrowerQualifiesForDifferentWorkoutOption"/>
 *     &lt;enumeration value="DelegatedAuthorityNotCompliant"/>
 *     &lt;enumeration value="HasAssetsAndRefusedToContribute"/>
 *     &lt;enumeration value="InsufficientContribution"/>
 *     &lt;enumeration value="MissingDocumentation"/>
 *     &lt;enumeration value="NoLegitimateHardship"/>
 *     &lt;enumeration value="NonArmsLengthTransaction"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="SecondLienHolderRefusedRelease"/>
 *     &lt;enumeration value="SecondLienHolderWillNotResubordinate"/>
 *     &lt;enumeration value="ServicerDelegated"/>
 *     &lt;enumeration value="SufficientIncomeToSupportDebt"/>
 *     &lt;enumeration value="TornDownOrNotRepairable"/>
 *     &lt;enumeration value="UnacceptableOffer"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "MIWorkoutDenialReasonBase")
@XmlEnum
public enum MIWorkoutDenialReasonBase {


    /**
     * Based on calculations per MI Company's servicing guidelines the borrower is not able to afford the restructured payment for the workout.
     *
     */
    @XmlEnumValue("BorrowerCannotAfford")
    BORROWER_CANNOT_AFFORD("BorrowerCannotAfford"),

    /**
     * The workout option is denied because the borrower qualifies for another preferred workout option.
     *
     */
    @XmlEnumValue("BorrowerQualifiesForDifferentWorkoutOption")
    BORROWER_QUALIFIES_FOR_DIFFERENT_WORKOUT_OPTION("BorrowerQualifiesForDifferentWorkoutOption"),

    /**
     * Finalized transaction did not meet delegated guidelines.
     *
     */
    @XmlEnumValue("DelegatedAuthorityNotCompliant")
    DELEGATED_AUTHORITY_NOT_COMPLIANT("DelegatedAuthorityNotCompliant"),

    /**
     * Borrower has assets that can be contributed toward the workout but has refused to do so.
     *
     */
    @XmlEnumValue("HasAssetsAndRefusedToContribute")
    HAS_ASSETS_AND_REFUSED_TO_CONTRIBUTE("HasAssetsAndRefusedToContribute"),

    /**
     * Borrower's agreed contribution amount did not meet contribution requirement.
     *
     */
    @XmlEnumValue("InsufficientContribution")
    INSUFFICIENT_CONTRIBUTION("InsufficientContribution"),

    /**
     * Documentation required by the MI in order to provide a decision on a workout request was not provided.
     *
     */
    @XmlEnumValue("MissingDocumentation")
    MISSING_DOCUMENTATION("MissingDocumentation"),

    /**
     * Based on calculations per MI company's servicing guidelines the hardship being experienced by the borrower is not a legitmate reason for a workout.
     *
     */
    @XmlEnumValue("NoLegitimateHardship")
    NO_LEGITIMATE_HARDSHIP("NoLegitimateHardship"),

    /**
     * The short sale request was denied due to the transaction not being arms length.
     *
     */
    @XmlEnumValue("NonArmsLengthTransaction")
    NON_ARMS_LENGTH_TRANSACTION("NonArmsLengthTransaction"),
    @XmlEnumValue("Other")
    OTHER("Other"),

    /**
     * Second lien holder will not accept settlement to release the second lien from the title.
     *
     */
    @XmlEnumValue("SecondLienHolderRefusedRelease")
    SECOND_LIEN_HOLDER_REFUSED_RELEASE("SecondLienHolderRefusedRelease"),

    /**
     * The second lien holder will not resubordinate their lien in order for the first lien to refinance.
     *
     */
    @XmlEnumValue("SecondLienHolderWillNotResubordinate")
    SECOND_LIEN_HOLDER_WILL_NOT_RESUBORDINATE("SecondLienHolderWillNotResubordinate"),

    /**
     * The MI company workout decision is delegated to the servicer.
     *
     */
    @XmlEnumValue("ServicerDelegated")
    SERVICER_DELEGATED("ServicerDelegated"),

    /**
     * Based on calculations borrower has sufficient income to support and/or pay off the debt.
     *
     */
    @XmlEnumValue("SufficientIncomeToSupportDebt")
    SUFFICIENT_INCOME_TO_SUPPORT_DEBT("SufficientIncomeToSupportDebt"),

    /**
     * Based on calculations per MI company's servicing guidelines the workout is denied due to the subject property being torn down or is unable to be repaired.
     *
     */
    @XmlEnumValue("TornDownOrNotRepairable")
    TORN_DOWN_OR_NOT_REPAIRABLE("TornDownOrNotRepairable"),

    /**
     * Based on calculations per MI company's servicing guidelines the workout is denied due to the offer being unacceptable.
     *
     */
    @XmlEnumValue("UnacceptableOffer")
    UNACCEPTABLE_OFFER("UnacceptableOffer");
    private final String value;

    MIWorkoutDenialReasonBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static MIWorkoutDenialReasonBase fromValue(String v) {
        for (MIWorkoutDenialReasonBase c: MIWorkoutDenialReasonBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
