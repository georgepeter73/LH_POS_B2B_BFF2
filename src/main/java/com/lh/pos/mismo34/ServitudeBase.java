//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ServitudeBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ServitudeBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="Condition"/>
 *     &lt;enumeration value="Covenant"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="PrivatelyCreated"/>
 *     &lt;enumeration value="Restriction"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "ServitudeBase")
@XmlEnum
public enum ServitudeBase {


    /**
     * Relates to conditions of ownership or use.
     *
     */
    @XmlEnumValue("Condition")
    CONDITION("Condition"),

    /**
     * An enforceable promise related to act or refrain from acting, typically running with the land and affecting subsequent owners.
     *
     */
    @XmlEnumValue("Covenant")
    COVENANT("Covenant"),
    @XmlEnumValue("Other")
    OTHER("Other"),
    @XmlEnumValue("PrivatelyCreated")
    PRIVATELY_CREATED("PrivatelyCreated"),

    /**
     * Relates to specific restrictions related to ownership or use.
     *
     */
    @XmlEnumValue("Restriction")
    RESTRICTION("Restriction");
    private final String value;

    ServitudeBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ServitudeBase fromValue(String v) {
        for (ServitudeBase c: ServitudeBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
