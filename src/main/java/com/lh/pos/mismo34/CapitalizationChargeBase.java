//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CapitalizationChargeBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CapitalizationChargeBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="AttorneyFees"/>
 *     &lt;enumeration value="DelinquentHomeownersFees"/>
 *     &lt;enumeration value="DelinquentInterest"/>
 *     &lt;enumeration value="EscrowShortages"/>
 *     &lt;enumeration value="LateCharge"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="UnreportedInterest"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "CapitalizationChargeBase")
@XmlEnum
public enum CapitalizationChargeBase {

    @XmlEnumValue("AttorneyFees")
    ATTORNEY_FEES("AttorneyFees"),
    @XmlEnumValue("DelinquentHomeownersFees")
    DELINQUENT_HOMEOWNERS_FEES("DelinquentHomeownersFees"),
    @XmlEnumValue("DelinquentInterest")
    DELINQUENT_INTEREST("DelinquentInterest"),
    @XmlEnumValue("EscrowShortages")
    ESCROW_SHORTAGES("EscrowShortages"),
    @XmlEnumValue("LateCharge")
    LATE_CHARGE("LateCharge"),
    @XmlEnumValue("Other")
    OTHER("Other"),

    /**
     * Interest capitalized for a payment posted to the servicer's system but not yet reported during the scheduled investor reporting cycle.
     *
     */
    @XmlEnumValue("UnreportedInterest")
    UNREPORTED_INTEREST("UnreportedInterest");
    private final String value;

    CapitalizationChargeBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CapitalizationChargeBase fromValue(String v) {
        for (CapitalizationChargeBase c: CapitalizationChargeBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
