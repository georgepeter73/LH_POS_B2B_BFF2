//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for BankruptcyDispositionBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="BankruptcyDispositionBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="Confirmed"/>
 *     &lt;enumeration value="Discharged"/>
 *     &lt;enumeration value="Dismissed"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="Pending"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "BankruptcyDispositionBase")
@XmlEnum
public enum BankruptcyDispositionBase {


    /**
     * The bankruptcy plan has been accepted by affected parties.
     *
     */
    @XmlEnumValue("Confirmed")
    CONFIRMED("Confirmed"),

    /**
     * The unsecured debt is no longer pursuable.
     *
     */
    @XmlEnumValue("Discharged")
    DISCHARGED("Discharged"),

    /**
     * The bankruptcy was not completed. Collection activities can resume.
     *
     */
    @XmlEnumValue("Dismissed")
    DISMISSED("Dismissed"),
    @XmlEnumValue("Other")
    OTHER("Other"),

    /**
     * A bankruptcy action is currently waiting on a matter resolution by the court.
     *
     */
    @XmlEnumValue("Pending")
    PENDING("Pending");
    private final String value;

    BankruptcyDispositionBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static BankruptcyDispositionBase fromValue(String v) {
        for (BankruptcyDispositionBase c: BankruptcyDispositionBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
