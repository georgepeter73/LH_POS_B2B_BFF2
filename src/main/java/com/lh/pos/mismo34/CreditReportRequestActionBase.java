//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CreditReportRequestActionBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CreditReportRequestActionBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="ForceNew"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="Reissue"/>
 *     &lt;enumeration value="Retrieve"/>
 *     &lt;enumeration value="SecondaryUseNotification"/>
 *     &lt;enumeration value="StatusQuery"/>
 *     &lt;enumeration value="Submit"/>
 *     &lt;enumeration value="Update"/>
 *     &lt;enumeration value="Upgrade"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "CreditReportRequestActionBase")
@XmlEnum
public enum CreditReportRequestActionBase {


    /**
     * Add as a new request and force new credit data to be requested from the repository bureaus.
     *
     */
    @XmlEnumValue("ForceNew")
    FORCE_NEW("ForceNew"),

    /**
     * Credit Report Request Action Type is not in the enumerated list. Specify the action in the Credit Report Request Action Type Other Description.
     *
     */
    @XmlEnumValue("Other")
    OTHER("Other"),

    /**
     * Resend existing report (specify Credit Report Identifier). Reissue is used to request the re-delivery of a response file that had been delivered previously. Some credit vendors may charge for a Reissue, and in some cases, a Reissue may also trigger re-pulling of credit data if the on file credit data is older than a specified number of days.
     *
     */
    @XmlEnumValue("Reissue")
    REISSUE("Reissue"),

    /**
     * Request initial delivery of an updated, upgraded, or completed report (specify Credit Report Identifier).
     *
     */
    @XmlEnumValue("Retrieve")
    RETRIEVE("Retrieve"),

    /**
     * This option notifies the Credit Bureau that the previously issued credit response (specify Credit Report Identifier) has been reviewed by additional users (specify in KEY element). A response transaction does not need to be returned by the Credit Bureau.
     *
     */
    @XmlEnumValue("SecondaryUseNotification")
    SECONDARY_USE_NOTIFICATION("SecondaryUseNotification"),

    /**
     * Used to check on the status of an existing request transaction.
     *
     */
    @XmlEnumValue("StatusQuery")
    STATUS_QUERY("StatusQuery"),

    /**
     * Submit or add as a new request. If the Credit Bureau determines that the report data already exists on their system and was recently pulled, they may return this previously pulled data instead of requesting new data from the repository bureau.
     *
     */
    @XmlEnumValue("Submit")
    SUBMIT("Submit"),

    /**
     * Update data for an existing report (specify Credit Report Identifier).
     *
     */
    @XmlEnumValue("Update")
    UPDATE("Update"),

    /**
     * Upgrade an existing report (specify Credit Report Identifier) to a type listed in Credit Report Type, or specify additional repository bureaus to be pulled.
     *
     */
    @XmlEnumValue("Upgrade")
    UPGRADE("Upgrade");
    private final String value;

    CreditReportRequestActionBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CreditReportRequestActionBase fromValue(String v) {
        for (CreditReportRequestActionBase c: CreditReportRequestActionBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
