//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for OffSiteImprovementBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="OffSiteImprovementBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="Alley"/>
 *     &lt;enumeration value="CurbGutter"/>
 *     &lt;enumeration value="Gated"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="Sidewalk"/>
 *     &lt;enumeration value="Street"/>
 *     &lt;enumeration value="StreetAccess"/>
 *     &lt;enumeration value="StreetLighting"/>
 *     &lt;enumeration value="StreetMaintenance"/>
 *     &lt;enumeration value="StreetSurface"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "OffSiteImprovementBase")
@XmlEnum
public enum OffSiteImprovementBase {

    @XmlEnumValue("Alley")
    ALLEY("Alley"),
    @XmlEnumValue("CurbGutter")
    CURB_GUTTER("CurbGutter"),
    @XmlEnumValue("Gated")
    GATED("Gated"),
    @XmlEnumValue("Other")
    OTHER("Other"),
    @XmlEnumValue("Sidewalk")
    SIDEWALK("Sidewalk"),
    @XmlEnumValue("Street")
    STREET("Street"),
    @XmlEnumValue("StreetAccess")
    STREET_ACCESS("StreetAccess"),
    @XmlEnumValue("StreetLighting")
    STREET_LIGHTING("StreetLighting"),
    @XmlEnumValue("StreetMaintenance")
    STREET_MAINTENANCE("StreetMaintenance"),
    @XmlEnumValue("StreetSurface")
    STREET_SURFACE("StreetSurface");
    private final String value;

    OffSiteImprovementBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static OffSiteImprovementBase fromValue(String v) {
        for (OffSiteImprovementBase c: OffSiteImprovementBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
