//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for EscrowHoldbackBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="EscrowHoldbackBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="ConstructionMortgage"/>
 *     &lt;enumeration value="EnergyEfficientMortgage"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="RehabilitationMortgage"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "EscrowHoldbackBase")
@XmlEnum
public enum EscrowHoldbackBase {


    /**
     * Escrow account for construction completion that are set aside as part of a construction or construction-to-perm loan.
     *
     */
    @XmlEnumValue("ConstructionMortgage")
    CONSTRUCTION_MORTGAGE("ConstructionMortgage"),

    /**
     * Escrow account for energy efficiency improvement funds that are set aside as part of an Energy Efficient Mortgage (EEM) program that are part of Section 203(b), 203(k), 234(c) and 203(h) loans.
     *
     */
    @XmlEnumValue("EnergyEfficientMortgage")
    ENERGY_EFFICIENT_MORTGAGE("EnergyEfficientMortgage"),
    @XmlEnumValue("Other")
    OTHER("Other"),

    /**
     * Escrow account for rehabilitation repair or upgrade funds that are set aside as part of a Section 203(k) rehabilitation loan.
     *
     */
    @XmlEnumValue("RehabilitationMortgage")
    REHABILITATION_MORTGAGE("RehabilitationMortgage");
    private final String value;

    EscrowHoldbackBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static EscrowHoldbackBase fromValue(String v) {
        for (EscrowHoldbackBase c: EscrowHoldbackBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
