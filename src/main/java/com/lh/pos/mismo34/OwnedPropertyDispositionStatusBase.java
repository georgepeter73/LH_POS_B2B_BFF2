//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for OwnedPropertyDispositionStatusBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="OwnedPropertyDispositionStatusBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="PendingSale"/>
 *     &lt;enumeration value="Retain"/>
 *     &lt;enumeration value="Sold"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "OwnedPropertyDispositionStatusBase")
@XmlEnum
public enum OwnedPropertyDispositionStatusBase {


    /**
     * Property is pending sale at the time of the current transaction.
     *
     */
    @XmlEnumValue("PendingSale")
    PENDING_SALE("PendingSale"),

    /**
     * Property is to be held by borrower after closing of the current transaction.
     *
     */
    @XmlEnumValue("Retain")
    RETAIN("Retain"),

    /**
     * A property that was owned by the borrower and was sold prior to closing of the current transaction.
     *
     */
    @XmlEnumValue("Sold")
    SOLD("Sold");
    private final String value;

    OwnedPropertyDispositionStatusBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static OwnedPropertyDispositionStatusBase fromValue(String v) {
        for (OwnedPropertyDispositionStatusBase c: OwnedPropertyDispositionStatusBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
