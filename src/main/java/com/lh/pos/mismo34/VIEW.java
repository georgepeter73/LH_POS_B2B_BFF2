//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import java.util.HashMap;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * A complete, standalone visual representation of the document  at a given point in its lifecycle. Document processors may create new VIEW elements when there is a need to effect a change to the view but the previous version has to be preserved because of legal constraints, technical limitations or other reasons. The first VIEW element created in the DOCUMENT must have a SequenceNumber  with the value 1. Each subsequent element must have the sequence number of the previous element plus 1. The VIEW element with the highest sequence identifier is the current version of the view.
 *
 * <p>Java class for VIEW complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="VIEW">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;choice minOccurs="0">
 *           &lt;element name="VIEW_FILES" type="{http://www.mismo.org/residential/2009/schemas}VIEW_FILES" minOccurs="0"/>
 *           &lt;element name="VIEW_PAGES" type="{http://www.mismo.org/residential/2009/schemas}VIEW_PAGES" minOccurs="0"/>
 *         &lt;/choice>
 *         &lt;element name="VIEW_DETAIL" type="{http://www.mismo.org/residential/2009/schemas}VIEW_DETAIL" minOccurs="0"/>
 *         &lt;element name="VIEW_FIELDS" type="{http://www.mismo.org/residential/2009/schemas}VIEW_FIELDS" minOccurs="0"/>
 *         &lt;element name="VIEW_IDENTIFIERS" type="{http://www.mismo.org/residential/2009/schemas}VIEW_IDENTIFIERS" minOccurs="0"/>
 *         &lt;element name="EXTENSION" type="{http://www.mismo.org/residential/2009/schemas}VIEW_EXTENSION" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attGroup ref="{http://www.w3.org/1999/xlink}MISMOresourceLink"/>
 *       &lt;attGroup ref="{http://www.mismo.org/residential/2009/schemas}AttributeExtension"/>
 *       &lt;attribute name="SequenceNumber" type="{http://www.mismo.org/residential/2009/schemas}MISMOSequenceNumber_Base" />
 *       &lt;anyAttribute processContents='lax'/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "VIEW", propOrder = {
    "viewfiles",
    "viewpages",
    "viewdetail",
    "viewfields",
    "viewidentifiers",
    "extension"
})
public class VIEW {

    @XmlElement(name = "VIEW_FILES")
    protected VIEWFILES viewfiles;
    @XmlElement(name = "VIEW_PAGES")
    protected VIEWPAGES viewpages;
    @XmlElement(name = "VIEW_DETAIL")
    protected VIEWDETAIL viewdetail;
    @XmlElement(name = "VIEW_FIELDS")
    protected VIEWFIELDS viewfields;
    @XmlElement(name = "VIEW_IDENTIFIERS")
    protected VIEWIDENTIFIERS viewidentifiers;
    @XmlElement(name = "EXTENSION")
    protected VIEWEXTENSION extension;
    @XmlAttribute(name = "SequenceNumber")
    protected Integer sequenceNumber;
    @XmlAttribute(name = "label", namespace = "http://www.w3.org/1999/xlink")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String label;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Gets the value of the viewfiles property.
     *
     * @return
     *     possible object is
     *     {@link VIEWFILES }
     *
     */
    public VIEWFILES getVIEWFILES() {
        return viewfiles;
    }

    /**
     * Sets the value of the viewfiles property.
     *
     * @param value
     *     allowed object is
     *     {@link VIEWFILES }
     *
     */
    public void setVIEWFILES(VIEWFILES value) {
        this.viewfiles = value;
    }

    /**
     * Gets the value of the viewpages property.
     *
     * @return
     *     possible object is
     *     {@link VIEWPAGES }
     *
     */
    public VIEWPAGES getVIEWPAGES() {
        return viewpages;
    }

    /**
     * Sets the value of the viewpages property.
     *
     * @param value
     *     allowed object is
     *     {@link VIEWPAGES }
     *
     */
    public void setVIEWPAGES(VIEWPAGES value) {
        this.viewpages = value;
    }

    /**
     * Gets the value of the viewdetail property.
     *
     * @return
     *     possible object is
     *     {@link VIEWDETAIL }
     *
     */
    public VIEWDETAIL getVIEWDETAIL() {
        return viewdetail;
    }

    /**
     * Sets the value of the viewdetail property.
     *
     * @param value
     *     allowed object is
     *     {@link VIEWDETAIL }
     *
     */
    public void setVIEWDETAIL(VIEWDETAIL value) {
        this.viewdetail = value;
    }

    /**
     * Gets the value of the viewfields property.
     *
     * @return
     *     possible object is
     *     {@link VIEWFIELDS }
     *
     */
    public VIEWFIELDS getVIEWFIELDS() {
        return viewfields;
    }

    /**
     * Sets the value of the viewfields property.
     *
     * @param value
     *     allowed object is
     *     {@link VIEWFIELDS }
     *
     */
    public void setVIEWFIELDS(VIEWFIELDS value) {
        this.viewfields = value;
    }

    /**
     * Gets the value of the viewidentifiers property.
     *
     * @return
     *     possible object is
     *     {@link VIEWIDENTIFIERS }
     *
     */
    public VIEWIDENTIFIERS getVIEWIDENTIFIERS() {
        return viewidentifiers;
    }

    /**
     * Sets the value of the viewidentifiers property.
     *
     * @param value
     *     allowed object is
     *     {@link VIEWIDENTIFIERS }
     *
     */
    public void setVIEWIDENTIFIERS(VIEWIDENTIFIERS value) {
        this.viewidentifiers = value;
    }

    /**
     * Gets the value of the extension property.
     *
     * @return
     *     possible object is
     *     {@link VIEWEXTENSION }
     *
     */
    public VIEWEXTENSION getEXTENSION() {
        return extension;
    }

    /**
     * Sets the value of the extension property.
     *
     * @param value
     *     allowed object is
     *     {@link VIEWEXTENSION }
     *
     */
    public void setEXTENSION(VIEWEXTENSION value) {
        this.extension = value;
    }

    /**
     * Gets the value of the sequenceNumber property.
     *
     * @return
     *     possible object is
     *     {@link Integer }
     *
     */
    public Integer getSequenceNumber() {
        return sequenceNumber;
    }

    /**
     * Sets the value of the sequenceNumber property.
     *
     * @param value
     *     allowed object is
     *     {@link Integer }
     *
     */
    public void setSequenceNumber(Integer value) {
        this.sequenceNumber = value;
    }

    /**
     * Gets the value of the label property.
     *
     * @return
     *     possible object is
     *     {@link String }
     *
     */
    public String getLabel() {
        return label;
    }

    /**
     * Sets the value of the label property.
     *
     * @param value
     *     allowed object is
     *     {@link String }
     *
     */
    public void setLabel(String value) {
        this.label = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     *
     * <p>
     * the map is keyed by the name of the attribute and
     * the value is the string value of the attribute.
     *
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     *
     *
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

}
