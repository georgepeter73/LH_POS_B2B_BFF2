//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.02.11 at 08:03:21 AM EST
//


package com.lh.pos.mismo34;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PropertyEstateBase.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PropertyEstateBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="FeeSimple"/>
 *     &lt;enumeration value="Fractional"/>
 *     &lt;enumeration value="Leasehold"/>
 *     &lt;enumeration value="Other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "PropertyEstateBase")
@XmlEnum
public enum PropertyEstateBase {


    /**
     * The greatest possible interest a person can have in real estate, including the right to dispose of the property or pass it on to their heirs.
     *
     */
    @XmlEnumValue("FeeSimple")
    FEE_SIMPLE("FeeSimple"),

    /**
     * An shared interest among multiple parties in the single title or deed associated with a property. Fractional ownership generally restricts the owners usage of the property.
     *
     */
    @XmlEnumValue("Fractional")
    FRACTIONAL("Fractional"),

    /**
     * An estate or interest in real property held by virtue of a lease.
     *
     */
    @XmlEnumValue("Leasehold")
    LEASEHOLD("Leasehold"),
    @XmlEnumValue("Other")
    OTHER("Other");
    private final String value;

    PropertyEstateBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PropertyEstateBase fromValue(String v) {
        for (PropertyEstateBase c: PropertyEstateBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
